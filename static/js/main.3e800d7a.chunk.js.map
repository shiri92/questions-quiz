{"version":3,"sources":["services/GameService.js","pages/GameBoard.js","actions/gameActions.js","App.js","serviceWorker.js","reducers/gameReducer.js","reducers/index.js","Store.js","index.js"],"names":["id","questions","txt","answers","isClicked","correctOptIndex","GameService","getQuests","Promise","resolve","getCurrQuestion","idx","arguments","length","undefined","GameBoard","state","answeredQuestions","isLastQuestion","selectedAnswer","playerScore","handleAnswerClick","answer","_this","props","currQuestion","setState","handleNextClick","findIndex","question","splice","push","handlePreviewClick","console","log","pop","this","_this2","currAnswers","map","react_default","a","createElement","className","concat","key","onClick","disabled","Component","connect","gameReducer","items","item","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","res","wrap","_context","prev","next","sent","type","payload","stop","_x","apply","_ref2","_callee2","_context2","_x2","App","pages_GameBoard","Boolean","window","location","hostname","match","initialState","combineReducers","action","objectSpread","middleware","thunk","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3e800d7a.chunk.js","sourcesContent":["// questions array\n\nlet id = 1;\n\nconst questions = [\n    {\n        id: id++, txt: 'Inside which HTML element do we put the JavaScript?',\n        answers: [{ txt: '<scripting>', isClicked: false }, { txt: '<script>', isClicked: false }, { txt: '<JavaScript>', isClicked: false }, { txt: '<js>', isClicked: false }],\n        correctOptIndex: 1\n    },\n    {\n        id: id++, txt: 'How do you write a conditional statement for executing some statements only if \"i\" is equal to 5?',\n        answers: [{ txt: 'If i==5 then', isClicked: false }, { txt: 'If i=5 then', isClicked: false }, { txt: 'If (i==5)', isClicked: false }, { txt: 'If i=5', isClicked: false }],\n        correctOptIndex: 2\n    },\n    {\n        id: id++, txt: 'How does a \"for\" loop start?',\n        answers: [{ txt: 'For (let i = 0; i', isClicked: false }, { txt: 'For (i = 0; !', isClicked: false }, { txt: 'For i = 1 to 5', isClicked: false }, { txt: 'while (i', isClicked: false }],\n        correctOptIndex: 0\n    },\n    {\n        id: id++, txt: 'You define an array using',\n        answers: [{ txt: 'Var myarray = new Array();', isClicked: false }, { txt: 'Var myarray = array new;', isClicked: false }, { txt: 'Var new Array() = myarray;', isClicked: false }, { txt: 'Var new array = myarray;', isClicked: false }],\n        correctOptIndex: 0\n    },\n    {\n        id: id++, txt: 'How do you round the number 8.25, to the nearest whole number?',\n        answers: [{ txt: 'Math.rnd(8.25)', isClicked: false }, { txt: 'Rnd(8.25)', isClicked: false }, { txt: 'Round(8.25)', isClicked: false }, { txt: 'Math.round(8.25)', isClicked: false }],\n        correctOptIndex: 3\n    },\n    {\n        id: id++, txt: 'How do you find the largest number of 6 and 8?',\n        answers: [{ txt: 'Top(6,8)', isClicked: false }, { txt: 'Math.max(6,8)', isClicked: false }, { txt: 'Ceil(6,8)', isClicked: false }, { txt: 'Math.ceil(6,8)', isClicked: false }],\n        correctOptIndex: 1\n    },\n    {\n        id: id++, txt: 'How long did Brendan Eich take to write the JavaScript programming language?',\n        answers: [{ txt: '10 days', isClicked: false }, { txt: '2 weeks', isClicked: false }, { txt: '2 months', isClicked: false }, { txt: '10 months', isClicked: false }],\n        correctOptIndex: 0\n    },\n    {\n        id: id++, txt: 'Who created JavaScript?',\n        answers: [{ txt: 'Microsoft', isClicked: false }, { txt: 'Sun Microsystems', isClicked: false }, { txt: 'Oracle', isClicked: false }, { txt: 'Netscape', isClicked: false }],\n        correctOptIndex: 3\n    },\n    {\n        id: id++, txt: 'Which of the following is not a reserved word in JavaScript?',\n        answers: [{ txt: 'default', isClicked: false }, { txt: 'finally', isClicked: false }, { txt: 'undefined', isClicked: false }, { txt: 'throw', isClicked: false }],\n        correctOptIndex: 2\n    },\n    {\n        id: id++, txt: 'How do you create a function named coolFunction?',\n        answers: [{ txt: 'Function => coolfunction () {}', isClicked: false }, { txt: 'Function=coolFunction();', isClicked: false }, { txt: 'Function:coolFunction(){}', isClicked: false }, { txt: 'Function coolFunction () {}', isClicked: false }],\n        correctOptIndex: 3\n    }\n]\n\n\n\n// get the questions\n\nfunction getQuests() {\n    return Promise.resolve(questions);\n}\n\n\n// get single question\n\nfunction getCurrQuestion(idx = 0) {\n    return Promise.resolve(questions[idx]);\n}\n\nexport default {\n    getQuests,\n    getCurrQuestion\n}","import React, { Component } from 'react';\nimport {connect} from \"react-redux\";\nimport {getQuests, getCurrQuestion} from '../actions/gameActions';\n\n// import GameService from '../services/GameService';\n\nclass GameBoard extends Component {\n    state = {\n        answeredQuestions: [],\n        isLastQuestion: false,\n        selectedAnswer: null,\n        playerScore: 0\n    }\n\n\n    async componentDidMount() {\n        this.props.getQuests();\n        this.props.getCurrQuestion();\n    }\n\n\n    handleAnswerClick = answer => {\n        // making an answer object by the answer that the user clicked and updating it in the state\n        answer.id = this.props.currQuestion.id;\n        answer.isClicked = true;\n        if (this.state.selectedAnswer) {\n            this.setState({ selectedAnswer: answer });\n            let { selectedAnswer } = this.state;\n            selectedAnswer.isClicked = false\n        } else {\n            this.setState({ selectedAnswer: answer });\n        }\n    }\n\n\n    handleNextClick = () => {\n        // checking by id if exist in the answered questions array and change it, or if not, push it\n        if (this.state.selectedAnswer) {\n            let { selectedAnswer } = this.state\n            let { answeredQuestions } = this.state;\n            let idx = answeredQuestions.findIndex(question => question.id === selectedAnswer.id)\n            if (idx !== -1) answeredQuestions.splice(idx, 1, selectedAnswer);\n            else answeredQuestions.push(selectedAnswer);\n\n\n            // changing back the answered questions array and the currAnswer in the state with the updated ones\n            this.setState({ answeredQuestions: answeredQuestions, selectedAnswer: null });\n\n\n            // checking if this is the last question, or the game still on after it\n            if ((this.state.answeredQuestions.length + 1) === this.props.questions.length) {\n                this.setState({ isLastQuestion: true })\n            }\n\n\n            // calculating score\n            let answerIdx = this.props.currQuestion.answers.findIndex(answer => answer.txt === this.state.selectedAnswer.txt)\n            if (answerIdx === this.props.currQuestion.correctOptIndex) {\n                this.setState({ playerScore: this.state.playerScore + 10 });\n            }\n\n\n            // pass to the next question or the score screen\n            this.props.getCurrQuestion(this.state.answeredQuestions.length);\n            // this.setState({ currQuestion: GameService.getCurrQuestion(this.state.answeredQuestions.length) })\n        }\n    }\n\n\n    handlePreviewClick = () => {\n        console.log(this.state.selectedAnswer)\n        // cut the answer from the answered questions array to let the player choose again\n        let { answeredQuestions } = this.state;\n        answeredQuestions.pop();\n        this.setState({\n            answeredQuestions: answeredQuestions,\n            currQuestion: this.props.getCurrQuestion(this.state.answeredQuestions.length)\n        })\n    }\n\n\n    render() {\n        let { currQuestion } = this.props;\n        if (currQuestion.id) {\n            var currAnswers = currQuestion.answers.map((answer, idx) => (\n                <div className={`answer d-flex flex-column align-items-center ${(answer.isClicked) ? \"clicked\" : \"\"}`}\n                    key={idx} onClick={() => this.handleAnswerClick(answer)}>\n                    <h3>{answer.txt}</h3>\n                </div>\n            ))\n        }\n        return (\n            <div className=\"game-board p-5\">\n                {currQuestion && <div className=\"container\">\n                    <div className=\"question\">\n                        <h1 className=\"text-center\">{currQuestion.txt}</h1>\n                    </div>\n                    <div className=\"answers d-flex flex-wrap justify-content-center\">\n                        {currAnswers}\n                    </div >\n\n                    <div className=\"btns d-flex justify-content-center\">\n                        <button className=\"prev btn btn-lg btn-primary m-5\"\n                            disabled={!this.state.answeredQuestions.length}\n                            onClick={this.handlePreviewClick}>\n                            Preview\n                        </button>\n                        <button className=\"next btn btn-lg btn-primary m-5\"\n                            onClick={this.handleNextClick}>\n                            {this.state.isLastQuestion ? 'Done' : 'Next'}\n                        </button>\n                    </div>\n                </div>}\n\n\n                {!currQuestion && <div className=\"container question d-flex flex-column align-items-center\">\n                    <h1>Your Score:</h1>\n                    <h1>{this.state.playerScore}</h1>\n                </div>}\n            </div>\n        );\n    }\n}\n\n\nconst mapCatsToProps =  state => ({\n    questions: state.gameReducer.items,\n    currQuestion: state.gameReducer.item\n})\n\n\nexport default connect(mapCatsToProps, {getQuests, getCurrQuestion })(GameBoard);\n\n","import GameService from '../services/GameService';\n\n\n\nexport const getQuests = () => async dispatch => {\n    const res = await GameService.getQuests();\n    dispatch({ type: 'GET_QUESTS', payload: res });\n}\n\nexport const getCurrQuestion = idx => async dispatch => {\n    const res = await GameService.getCurrQuestion(idx);\n    dispatch({ type: 'GET_CURR_QUEST', payload: res });\n}\n","import React, { Component } from 'react';\nimport GameBoard from './pages/GameBoard';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <GameBoard></GameBoard>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nconst initialState = {\n    items: [],\n    item: {}\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case 'GET_QUESTS':\n            return {\n                ...state,\n                items: action.payload\n            };\n        case 'GET_CURR_QUEST':\n            return {\n                ...state,\n                item: action.payload\n            };\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\nimport gameReducer from './gameReducer';\n\nexport default combineReducers({\n    gameReducer\n})","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\n\nconst store = createStore(rootReducer, initialState, applyMiddleware(...middleware));\n\n\n\n\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport store from './Store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}