{"version":3,"sources":["services/GameService.js","pages/GameBoard.js","actions/gameActions.js","App.js","serviceWorker.js","reducers/gameReducer.js","reducers/index.js","Store.js","index.js"],"names":["id","questions","txt","answers","isClicked","correctOptIndex","selectedAnswer","GameService","getQuests","forEach","question","answer","Promise","resolve","getCurrQuestion","idx","arguments","length","undefined","updateQuestion","find","GameBoard","state","answeredQuestions","isLastQuestion","playerScore","currQuestion","handleAnswerClick","_this","props","setState","handleNextClick","_callee","regenerator_default","a","wrap","_context","prev","next","findIndex","splice","push","stop","handlePreviewClick","_callee2","_context2","pop","handleRestart","_callee3","_context3","this","_this2","console","log","currAnswers","map","react_default","createElement","className","concat","key","onClick","disabled","Component","connect","gameReducer","items","item","_ref","Object","asyncToGenerator","mark","dispatch","res","sent","type","payload","_x","apply","_ref2","_x2","_ref3","_x3","App","pages_GameBoard","Boolean","window","location","hostname","match","initialState","combineReducers","action","objectSpread","middleware","thunk","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c7a270b5.chunk.js","sourcesContent":["\nlet id = 1;\n\n// questions array\nconst questions = [\n    {\n        id: id++, txt: 'Inside which HTML element do we put the JavaScript?',\n        answers: [\n            { txt: '<scripting>', isClicked: false },\n            { txt: '<script>', isClicked: false },\n            { txt: '<JavaScript>', isClicked: false },\n            { txt: '<js>', isClicked: false }\n        ],\n        correctOptIndex: 1,\n        selectedAnswer: null\n    },\n    {\n        id: id++, txt: 'How do you write a conditional statement for executing some statements only if \"i\" is equal to 5?',\n        answers: [\n            { txt: 'If i==5 then', isClicked: false },\n            { txt: 'If i=5 then', isClicked: false },\n            { txt: 'If (i==5)', isClicked: false },\n            { txt: 'If i=5', isClicked: false }\n        ],\n        correctOptIndex: 2,\n        selectedAnswer: null\n    },\n    {\n        id: id++, txt: 'How does a \"for\" loop start?',\n        answers: [\n            { txt: 'For (let i = 0; i', isClicked: false },\n            { txt: 'For (i = 0; !', isClicked: false },\n            { txt: 'For i = 1 to 5', isClicked: false },\n            { txt: 'while (i', isClicked: false }\n        ],\n        correctOptIndex: 0,\n        selectedAnswer: null\n    },\n    {\n        id: id++, txt: 'You define an array using',\n        answers: [\n            { txt: 'Var myarray = new Array();', isClicked: false },\n            { txt: 'Var myarray = array new;', isClicked: false },\n            { txt: 'Var new Array() = myarray;', isClicked: false },\n            { txt: 'Var new array = myarray;', isClicked: false }\n        ],\n        correctOptIndex: 0,\n        selectedAnswer: null\n    },\n    {\n        id: id++, txt: 'How do you round the number 8.25, to the nearest whole number?',\n        answers: [\n            { txt: 'Math.rnd(8.25)', isClicked: false },\n            { txt: 'Rnd(8.25)', isClicked: false },\n            { txt: 'Round(8.25)', isClicked: false },\n            { txt: 'Math.round(8.25)', isClicked: false }\n        ],\n        correctOptIndex: 3,\n        selectedAnswer: null\n    },\n    {\n        id: id++, txt: 'How do you find the largest number of 6 and 8?',\n        answers: [\n            { txt: 'Top(6,8)', isClicked: false },\n            { txt: 'Math.max(6,8)', isClicked: false },\n            { txt: 'Ceil(6,8)', isClicked: false },\n            { txt: 'Math.ceil(6,8)', isClicked: false }\n        ],\n        correctOptIndex: 1,\n        selectedAnswer: null\n    },\n    {\n        id: id++, txt: 'How long did Brendan Eich take to write the JavaScript programming language?',\n        answers: [\n            { txt: '10 days', isClicked: false },\n            { txt: '2 weeks', isClicked: false },\n            { txt: '2 months', isClicked: false },\n            { txt: '10 months', isClicked: false }\n        ],\n        correctOptIndex: 0,\n        selectedAnswer: null\n    },\n    {\n        id: id++, txt: 'Who created JavaScript?',\n        answers: [\n            { txt: 'Microsoft', isClicked: false },\n            { txt: 'Sun Microsystems', isClicked: false },\n            { txt: 'Oracle', isClicked: false },\n            { txt: 'Netscape', isClicked: false }\n        ],\n        correctOptIndex: 3,\n        selectedAnswer: null\n    },\n    {\n        id: id++, txt: 'Which of the following is not a reserved word in JavaScript?',\n        answers: [\n            { txt: 'default', isClicked: false },\n            { txt: 'finally', isClicked: false },\n            { txt: 'undefined', isClicked: false },\n            { txt: 'throw', isClicked: false }\n        ],\n        correctOptIndex: 2,\n        selectedAnswer: null\n    },\n    {\n        id: id++, txt: 'How do you create a function named coolFunction?',\n        answers: [\n            { txt: 'Function => coolfunction () {}', isClicked: false },\n            { txt: 'Function=coolFunction();', isClicked: false },\n            { txt: 'Function:coolFunction(){}', isClicked: false },\n            { txt: 'Function coolFunction () {}', isClicked: false }\n        ],\n        correctOptIndex: 3,\n        selectedAnswer: null\n    }\n]\n\n\n\n// get the questions\nfunction getQuests() {\n    questions.forEach(question => {\n        question.answers.forEach(answer => {\n            answer.isClicked = false;\n        });\n        question.selectedAnswer = null;\n    });\n    return Promise.resolve(questions);\n}\n\n\n// get single question\nfunction getCurrQuestion(idx = 0) {\n    return Promise.resolve(questions[idx]);\n}\n\n\n// update question\nfunction updateQuestion(answer) {\n    let question = questions.find(question => question.id === answer.id);\n    question.selectedAnswer = answer;\n    return Promise.resolve(question);\n}\n\n\nexport default {\n    getQuests,\n    getCurrQuestion,\n    updateQuestion\n}","import React, { Component } from 'react';\nimport {connect} from \"react-redux\";\nimport {getQuests, getCurrQuestion, updateQuestion} from '../actions/gameActions';\n\n\nclass GameBoard extends Component {\n    state = {\n        answeredQuestions: [],\n        isLastQuestion: false,\n        selectedAnswer: null,\n        playerScore: 0,\n        questions: [],\n        currQuestion: null\n    }\n\n\n    async componentDidMount() {\n        await this.props.getQuests();\n        await this.props.getCurrQuestion();\n        this.setState({questions: this.props.questions, currQuestion: this.props.currQuestion});\n    }\n\n\n    handleAnswerClick = answer => {\n        // making an answer object by the answer that the user clicked and updating it in the state\n        answer.id = this.state.currQuestion.id;\n        answer.isClicked = true;\n        this.props.updateQuestion(answer);\n        this.setState({ selectedAnswer: answer });\n        if (this.state.selectedAnswer) {\n            // checking if it's the same answer, not doing anything\n            if(this.state.selectedAnswer.txt === answer.txt) return;\n            let { selectedAnswer } = this.state;\n            selectedAnswer.isClicked = false;\n        }\n    }\n\n\n    handleNextClick = async () => {\n        let {selectedAnswer} = this.state.currQuestion;\n        this.setState({selectedAnswer });\n\n        // checking by id if exist in the answered questions array and change it, or if not, push it\n        if (this.state.selectedAnswer) {\n            let { currQuestion } = this.state\n            let { answeredQuestions } = this.state;\n            let idx = answeredQuestions.findIndex(question => question.id === currQuestion.id)\n            if (idx !== -1) answeredQuestions.splice(idx, 1, currQuestion);\n            else answeredQuestions.push(currQuestion);\n\n\n            // changing back the answered questions array and the currAnswer in the state with the updated ones\n            this.setState({ answeredQuestions, selectedAnswer: null });\n\n\n            // calculating score\n            let answerIdx = this.state.currQuestion.answers.findIndex(answer => answer.txt === this.state.selectedAnswer.txt)\n            if (answerIdx === this.state.currQuestion.correctOptIndex) {\n                this.setState({ playerScore: this.state.playerScore + 10 });\n            }\n\n\n            // pass to the next question or the score page\n            await this.props.getCurrQuestion(this.state.answeredQuestions.length);\n            this.setState({ currQuestion: this.props.currQuestion }); \n            \n            \n            // checking if this is the last question, or the game still on after it\n            if ((this.state.answeredQuestions.length + 1) === this.state.questions.length) {\n                this.setState({ isLastQuestion: true })\n            }\n        }\n    }\n\n\n    handlePreviewClick = async () => {\n        // getting back the preview curr question going down in array idx, and set again the\n        // selected answer by the one that wes before\n        await this.props.getCurrQuestion(this.state.answeredQuestions.length -1);\n        let {selectedAnswer} = this.state.answeredQuestions[this.state.answeredQuestions.length - 1];\n        let {answeredQuestions} = this.state;\n        answeredQuestions.pop();\n        this.setState({\n            currQuestion: this.props.currQuestion,\n            selectedAnswer,\n            playerScore: this.state.playerScore -10,\n            answeredQuestions\n         })\n    }\n\n\n    handleRestart = async () => {\n        this.setState({\n            answeredQuestions: [],\n            isLastQuestion: false,\n            selectedAnswer: null,\n            playerScore: 0,\n            questions: [],\n            currQuestion: null\n        });\n        await this.props.getQuests();\n        await this.props.getCurrQuestion();\n        this.setState({questions: this.props.questions, currQuestion: this.props.currQuestion});\n    }\n\n\n    render() {\n        console.log(this.state.selectedAnswer)\n        console.log(this.state.answeredQuestions)\n\n        let { currQuestion } = this.state;\n        if (currQuestion) {\n            var currAnswers = currQuestion.answers.map((answer, idx) => (\n                <div className={`answer d-flex flex-column align-items-center ${(answer.isClicked) ? \"clicked\" : \"\"}`}\n                    key={idx} onClick={() => this.handleAnswerClick(answer)}>\n                    <h3>{answer.txt}</h3>\n                </div>\n            ))\n        }\n        return (\n            <div className=\"game-board p-5\">\n                {currQuestion && <div className=\"container content\">\n                    <div className=\"question\">\n                        <h1 className=\"text-center\">{currQuestion.txt}</h1>\n                    </div>\n                    <div className=\"answers d-flex flex-wrap justify-content-center\">\n                        {currAnswers}\n                    </div >\n\n                    <div className=\"btns d-flex justify-content-center\">\n                        <button className=\"prev btn btn-primary m-5\"\n                            disabled={!this.state.answeredQuestions.length}\n                            onClick={this.handlePreviewClick}>\n                            Preview\n                        </button>\n                        <button className=\"next btn btn-primary m-5\"\n                            onClick={this.handleNextClick}>\n                            {this.state.isLastQuestion ? 'Done' : 'Next'}\n                        </button>\n                    </div>\n                </div>}\n\n\n                {!currQuestion && <div className=\"container text-center\">\n                    <div className=\"question d-flex flex-column align-items-center\">\n                        <h1>Your Score:</h1>\n                        <h1>{this.state.playerScore}</h1>\n                    </div>\n                    <button className=\"btn btn-primary m-5\" onClick={this.handleRestart}>Play Again</button>\n                </div>}\n            </div>\n        );\n    }\n}\n\n\nconst mapGameToProps =  state => ({\n    questions: state.gameReducer.items,\n    currQuestion: state.gameReducer.item\n})\n\n\nexport default connect(mapGameToProps, {getQuests, getCurrQuestion, updateQuestion })(GameBoard);\n\n","import GameService from '../services/GameService';\n\n\n\nexport const getQuests = () => async dispatch => {\n    const res = await GameService.getQuests();\n    dispatch({ type: 'GET_QUESTS', payload: res });\n}\n\nexport const getCurrQuestion = idx => async dispatch => {\n    const res = await GameService.getCurrQuestion(idx);\n    dispatch({ type: 'GET_CURR_QUEST', payload: res });\n}\n\nexport const updateQuestion = answer => async dispatch => {\n    const res = await GameService.updateQuestion(answer);\n    dispatch({ type: 'GET_CURR_QUEST', payload: res });\n}\n","import React, { Component } from 'react';\nimport GameBoard from './pages/GameBoard';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <GameBoard></GameBoard>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nconst initialState = {\n    items: [],\n    item: null\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case 'GET_QUESTS':\n            // const copyQuests = JSON.parse(JSON.stringify(state));\n            return {\n                ...state,\n                items: action.payload\n            };\n        case 'GET_CURR_QUEST':\n            // const copyCurrQuest = JSON.parse(JSON.stringify(state))\n            return {\n                ...state,\n                item: action.payload\n            };\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\nimport gameReducer from './gameReducer';\n\nexport default combineReducers({\n    gameReducer\n})","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\n\nconst store = createStore(rootReducer, initialState, applyMiddleware(...middleware));\n\n\n\n\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport store from './Store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}